class Node:
    def __init__(self, value) -> None:
        self.value = value
        self.left = None
        self.right = None

class BinarySearchTree:
    def __init__(self) -> None:
        self.root = None

    def insert(self, value):
        new_node = Node(value)
        if self.root is None:
            self.root = new_node
            return True
        else:
            temp = self.root
            while True:
                if temp.value == new_node.value:
                    return False
                else:
                    if temp.value > new_node.value:
                        if temp.left is None:
                            temp.left = new_node
                            return True
                        temp = temp.left
                    else:
                        if temp.right is None:
                            temp.right = new_node
                            return True
                        temp = temp.right

    def search(self, value):
        if self.root is None:
            return False
        elif self.root.value == value:
            return True
        else:
            temp = self.root
            while True:
                if temp is None:
                    return False
                elif temp.value == value:
                    return True
                elif temp.value < value:
                    temp = temp.right
                else:
                    temp = temp.left
                
    def get_min(self):
        temp = self.root
        while temp.left is not None:
            temp = temp.left
        return temp.value
    
    def get_max(self):
        temp = self.root
        while temp.right is not None:
            temp = temp.right
        return temp.value

my_bst = BinarySearchTree()
