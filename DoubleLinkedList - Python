class Node:
    def __init__(self, value) -> None:
        self.value = value
        self.prev = None
        self.next = None

class DoubleLinkedList:
    def __init__(self, value) -> None:
        new_node = Node(value)
        self.head = new_node
        self.tail = new_node
        self.length = 1
        
    def print_list(self):
        temp = self.head
        while temp is not None:
            print(temp.value)
            temp = temp.next 

    def print_list_reverse(self):
        temp = self.tail
        while temp is not None:
            print(temp.value)
            temp = temp.prev    
        
    def append(self, value):
        new_node = Node(value)
        if self.head == None:
            self.head = new_node
            self.tail = new_node
            self.length += 1
            return True
        else:
            self.tail.next = new_node
            new_node.prev = self.tail
            self.tail = new_node
            return True
        
my_dll = DoubleLinkedList(1)
my_dll.append(2)
my_dll.append(3)
my_dll.print_list_reverse()
